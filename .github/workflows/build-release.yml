name: Publish to Maven Central

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Run MVN Verify
        run: |
          mvn -P coverage -B verify

  publish:
    runs-on: ubuntu-22.04
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Configure Git
        run: |
          git config --global user.email "${{ secrets.GIT_USERNAME }}@digicert.com"
          git config --global user.name "${{ secrets.GIT_USERNAME }}"

      - name: Update Version in pom.xml
        run: |
          mvn versions:set -DnewVersion=${{ git tag --points-at HEAD | grep 'release' | sort -V | tail -n 1 }} -DgenerateBackupPoms=false

      - name: Generate Javadocs
        run: mvn -pl library javadoc:javadoc

      - name: Configure GPG
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --yes --import
      
        # Setup the central server credentials in settings.xml
      - name: Configure Server Credentials for Maven Central
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          servers: >
            [
              {
                "id": "central",
                "username": "${{ secrets.MVN_CENTRAL_USERNAME }}",
                "password": "${{ secrets.MVN_CENTRAL_USER_TOKEN }}"
              }
            ]

      - name: Deploy to Maven Central (no publish)
        run: |
          mvn -pl library javadoc:jar
          mvn -pl library deploy -P deploy-to-maven-central-beta -DskipTests -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} -DautoReleaseAfterClose=true --batch-mode
  
  